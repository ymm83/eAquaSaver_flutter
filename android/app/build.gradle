plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}
def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}
def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    namespace = "com.santross.eaquasaver"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"
    //compileSdk = 35
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    
    defaultConfig {
        applicationId = "com.santross.eaquasaver"
        minSdk = flutter.minSdkVersion
        minSdkVersion = 24
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        multiDexEnabled = true
    }
    
    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
        debug {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
        debug{
            signingConfig = signingConfigs.debug
        }   
    }
}


flutter {
    source = "../.."
}

dependencies {
    //implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"
    implementation "androidx.room:room-ktx:2.6.0"
    implementation "androidx.room:room-runtime:2.6.0"
    implementation "androidx.sqlite:sqlite-framework:2.4.0"
    implementation "androidx.sqlite:sqlite:2.4.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.22"
    
    // Actualiza estas dependencias a versiones m√°s recientes
    //implementation 'androidx.window:window:1.3.0'
    //implementation 'androidx.window:window-java:1.3.0'
    //implementation 'androidx.savedstate:savedstate-ktx:1.3.0'
    //implementation 'androidx.startup:startup-runtime:1.2.0'
    //implementation 'androidx.tracing:tracing-ktx:1.2.0'
    //implementation 'androidx.versionedparcelable:versionedparcelable:1.2.0'
    //implementation 'androidx.annotation:annotation-experimental:1.3.1'
}
